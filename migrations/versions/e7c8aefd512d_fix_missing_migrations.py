"""fix: missing migrations

Revision ID: e7c8aefd512d
Revises: 6557ef696721
Create Date: 2023-05-19 20:26:02.498201

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e7c8aefd512d'
down_revision = '6557ef696721'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('expense_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('expense_type', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('expense_type')
    )
    op.create_table('income_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('income_type', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('income_type')
    )
    op.create_table('expenses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('expense_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['expense_type_id'], ['expense_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('incomes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('income_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['income_type_id'], ['income_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('jobs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('job_invoice_id', sa.Integer(), nullable=False))
        batch_op.create_foreign_key(None, 'job_invoices', ['job_invoice_id'], ['id'])

    with op.batch_alter_table('jobs_statuses', schema=None) as batch_op:
        batch_op.drop_constraint('jobs_statuses_job_invoice_id_fkey', type_='foreignkey')
        batch_op.drop_column('job_invoice_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('jobs_statuses', schema=None) as batch_op:
        batch_op.add_column(sa.Column('job_invoice_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key('jobs_statuses_job_invoice_id_fkey', 'job_invoices', ['job_invoice_id'], ['id'])

    with op.batch_alter_table('jobs', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('job_invoice_id')

    op.drop_table('payments')
    op.drop_table('incomes')
    op.drop_table('expenses')
    op.drop_table('income_types')
    op.drop_table('expense_types')
    # ### end Alembic commands ###
